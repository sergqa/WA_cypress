version: 2
 
jobs:
 test:
   docker:
     - image: cypress/base:10.15.3
   steps:
     - checkout
     # restore folders with npm dependencies and Cypress binary
     - restore_cache:
         name: Restore Yarn Package Cache
         keys:
           - yarn-packages-{{ checksum "yarn.lock" }}
     # install npm dependencies and Cypress binary
     # if they were cached, this step is super quick
     - run:
         name: Install dependencies
         command: YARN_PRODUCTION=false yarn install --frozen-lockfile
     - run: npm run cy:verify
     # save npm dependencies and Cypress binary for future runs
     - save_cache:
         name: Save Yarn Package Cache
         key: yarn-packages-{{ checksum "yarn.lock" }}
         paths:
           - ~/.cache/yarn
     # start server before starting tests
     - run:
         command: yarn start
         background: true
     - run: yarn run e2e:record --key ${CYPRESS_RECORD_KEY}
 
 deploy:
   docker:
     - image: circleci/python:3.6
   steps:
     - checkout
     - setup_remote_docker
     - run:
         name: Set default profile
         command: |
           mkdir -p ~/.aws
           touch ~/.aws/config
           echo '[default]' >> ~/.aws/config
     - run:
         name: Install pip3 libs
         command: |
           sudo pip3 install -U \
             awscli==1.16.* \
             ansible==2.8.* \
             botocore==1.12.* \
             boto3==1.9.*
     - run:
         name: Install apt-get libs
         command: |
           sudo apt-get install -y \
             python3-requests=2.21.* \
             python3-docker=3.4.* \
             gnupg2=2.2.* \
             pass=1.7.*
     - run:
         name: Deploy to AWS
         command: |
           if [ "${CIRCLE_BRANCH}" == "master" ]; then
             AWS_DEFAULT_REGION=us-east-1 ANSIBLE_CONFIG=ansible/ansible.cfg ansible-playbook ansible/release-deploy.yml -i ansible/staging --extra-vars "branch=master aws_profile=default" -v -e 'ansible_python_interpreter=/usr/bin/python3'
           elif [ "${CIRCLE_BRANCH}" == "production" ]; then
             AWS_DEFAULT_REGION=us-east-1 ANSIBLE_CONFIG=ansible/ansible.cfg ansible-playbook ansible/release-deploy.yml -i ansible/production --extra-vars "branch=production aws_profile=default" -v -e 'ansible_python_interpreter=/usr/bin/python3'
           fi
 
workflows:
 version: 2
 deployment:
   jobs:
     - test
     - deploy:
         filters:
           branches:
             only:
               #- master
               - production
